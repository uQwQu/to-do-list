openapi: 3.0.3
info:
  title: to-do-list API
  version: 0.0.0
paths:
  /api/v1/auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: auth_users_list
      tags:
        - auth
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
    post:
      operationId: auth_users_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /api/v1/auth/users/{pkid}/:
    get:
      operationId: auth_users_retrieve
      parameters:
        - in: path
          name: pkid
          schema:
            type: integer
          description: A unique integer value identifying this User.
          required: true
      tags:
        - auth
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
        - in: path
          name: pkid
          schema:
            type: integer
          description: A unique integer value identifying this User.
          required: true
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
        - in: path
          name: pkid
          schema:
            type: integer
          description: A unique integer value identifying this User.
          required: true
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
        - in: path
          name: pkid
          schema:
            type: integer
          description: A unique integer value identifying this User.
          required: true
      tags:
        - auth
      security:
        - jwtAuth: [ ]
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
        - auth
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
        - auth
      security:
        - jwtAuth: [ ]
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
        - jwtAuth: [ ]
        - { }
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/v1/auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /api/v1/profiles/me/:
    get:
      operationId: profiles_me_retrieve
      tags:
        - profiles
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/v1/profiles/avatar/:
    patch:
      operationId: profiles_avatar_partial_update
      tags:
        - profiles
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          description: No response body
  /api/v1/lists/:
    get:
      operationId: lists_list
      tags:
        - lists
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
          description: ''
    post:
      operationId: lists_create
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
  /api/v1/lists/{slug}/:
    put:
      operationId: lists_update
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    patch:
      operationId: lists_partial_update
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      tags:
        - lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedList'
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    delete:
      operationId: lists_destroy
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      tags:
        - lists
      security:
        - jwtAuth: [ ]
      responses:
        '204':
          description: No response body
  /api/v1/tasks/{list_slug}/:
    get:
      operationId: tasks_list
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/{list_slug}/{task_slug}/:
    put:
      operationId: tasks_update
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
        - in: path
          name: task_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
        - in: path
          name: task_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
        - in: path
          name: task_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      security:
        - jwtAuth: [ ]
      responses:
        '204':
          description: No response body
  /api/v1/tasks/{list_slug}/{task_slug}/status/:
    patch:
      operationId: tasks_status_partial_update
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
        - in: path
          name: task_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          description: ''
  /api/v1/tasks/{list_slug}/done/:
    get:
      operationId: tasks_done_list
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/{list_slug}/undone/:
    get:
      operationId: tasks_undone_list
      parameters:
        - in: path
          name: list_slug
          schema:
            type: string
          required: true
      tags:
        - tasks
      security:
        - jwtAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
        - token
        - uid
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
        - access
        - email
        - password
        - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
        - access
        - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
        - token
    CustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 60
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email Address
        date_joined:
          type: string
          format: date-time
        avatar:
          type: string
          readOnly: true
      required:
        - avatar
        - email
        - full_name
        - id
        - username
    PatchedCustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 60
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email Address
        date_joined:
          type: string
          format: date-time
        avatar:
          type: string
          readOnly: true
    UserCreatePasswordRetype:
      type: object
      properties:
        username:
          type: string
          maxLength: 60
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        pkid:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
        - email
        - first_name
        - last_name
        - password
        - pkid
        - re_password
        - username
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
        - current_password
        - new_password
        - re_new_password
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
        - new_password
        - re_new_password
        - token
        - uid
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
      required:
        - new_email
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
      required:
        - current_password
        - new_email
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
        full_name:
          type: string
          readOnly: true
        avatar:
          type: string
          nullable: true
          readOnly: true
      required:
        - avatar
        - email
        - full_name
        - id
        - username
    List:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 250
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
      required:
        - author
        - created_at
        - id
        - slug
        - title
    PatchedList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 250
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        priority:
          type: string
        list:
          type: string
          readOnly: true
        title:
          type: string
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        body:
          type: string
        done:
          type: boolean
          readOnly: true
        author_username:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
      required:
        - author_username
        - created_at
        - done
        - id
        - list
        - priority
        - slug
        - title
    PatchedTask:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        priority:
          type: string
        list:
          type: string
          readOnly: true
        title:
          type: string
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        body:
          type: string
        done:
          type: boolean
          readOnly: true
        author_username:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
